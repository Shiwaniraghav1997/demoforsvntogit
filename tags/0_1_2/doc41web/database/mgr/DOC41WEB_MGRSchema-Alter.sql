--------------------------------------
-- Alter-Script: CVS v1.0           --
--------------------------------------

INSERT INTO DOC41WEB_FDT.VERSIONS (module, version, subVersion) VALUES ('DOC41WEB', 1, 0);
COMMIT WORK;

--------------------------------------
-- Alter-Script: CVS v1.0 -> v1.1   --
--------------------------------------
-- New Table SAP_PARTNER
-- New Reference D41_USER_PARTNER to SAP_PARTNER

CREATE TABLE SAP_PARTNER
(
  OBJECT_ID           NUMBER(27)                                 NOT NULL,
  CREATED             DATE,
  CHANGED             DATE,
  CREATEDBY           VARCHAR2(10 CHAR),
  CHANGEDBY           VARCHAR2(10 CHAR),
  CREATEDON           VARCHAR2(100 CHAR),
  CHANGEDON           VARCHAR2(100 CHAR),
  PARTNER_NUMBER      VARCHAR2(10 CHAR)                          NOT NULL,
  PARTNER_TYPE        VARCHAR2(2 CHAR)                           NOT NULL,
  NAME1               VARCHAR2(40 CHAR)                          NOT NULL,
  NAME2               VARCHAR2(40 CHAR),
  STREET              VARCHAR2(40 CHAR),
  POSTAL_CODE         VARCHAR2(10 CHAR),
  CITY                VARCHAR2(40 CHAR),
  COUNTRY_ISO_CODE    VARCHAR2(2 CHAR),
  IS_DELETED          NUMBER(1)                 DEFAULT 0        NOT NULL CONSTRAINT CK_SAPP_D CHECK (IS_DELETED IN (0, 1)),
  SAP_CHANGED         DATE
)
TABLESPACE DOC41WEB_DAT
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;

CREATE UNIQUE INDEX PK_SAP_PARTNER ON SAP_PARTNER
(OBJECT_ID)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX UK_SAP_PARTNER ON SAP_PARTNER
(PARTNER_NUMBER)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE OR REPLACE TRIGGER SAP_PARTNER_CDT
BEFORE INSERT OR UPDATE ON
  DOC41WEB_MGR.SAP_PARTNER
FOR EACH ROW
DECLARE
--  declare variables...
BEGIN
--  protect the create columns
  IF (INSERTING) THEN
    :new.created := DOC41WEB_FDT.get_Normalized_Time();
    IF (:new.changedBy IS NULL) THEN
      :new.changedBy := :new.createdBy;
    END IF;
  END IF;
  IF (UPDATING) THEN
    :new.created   := :old.created;
    :new.createdBy := :old.createdBy;
    :new.createdOn := :old.createdOn;
  END IF;
  :new.changed := DOC41WEB_FDT.get_Normalized_Time();
  IF (INSERTING AND :new.object_Id IS NULL) THEN
    :new.object_Id := DOC41WEB_FDT.get_Next_Oid();
  ELSIF (UPDATING) THEN
    :new.object_Id := :old.object_Id;
  END IF;
END;
/
SHOW ERRORS;

ALTER TABLE SAP_PARTNER ADD (
  CONSTRAINT PK_SAP_PARTNER
 PRIMARY KEY
 (OBJECT_ID));

ALTER TABLE SAP_PARTNER ADD (
  CONSTRAINT UK_SAP_PARTNER
 UNIQUE
 (PARTNER_NUMBER));

GRANT DELETE, INSERT, SELECT, UPDATE             ON SAP_PARTNER TO MXDOC41WEB WITH GRANT OPTION;

ALTER TABLE D41_USER_PARTNER ADD (PARTNER_ID            NUMBER(27));

ALTER TABLE D41_USER_PARTNER DROP CONSTRAINT UK_D41_USER_PARTNER;
DROP INDEX UK_D41_USER_PARTNER;

ALTER TABLE D41_USER_PARTNER DROP (PARTNER_NAME2, PARTNER_NAME1, PARTNER_TYPE, PARTNER_NUMBER);
ALTER TABLE D41_USER_PARTNER  MODIFY PARTNER_ID   NOT NULL;

CREATE UNIQUE INDEX UK_D41_USER_PARTNER ON D41_USER_PARTNER
(USER_ID, PARTNER_ID)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

ALTER TABLE D41_USER_PARTNER ADD (
  CONSTRAINT UK_D41_USER_PARTNER
 UNIQUE
 (USER_ID, PARTNER_ID));
 
ALTER TABLE D41_USER_PARTNER ADD (
  CONSTRAINT FK_D41_USER_PARTNER_PARTNER
 FOREIGN KEY (PARTNER_ID)
 REFERENCES DOC41WEB_MGR.SAP_PARTNER (OBJECT_ID)
);

UPDATE DOC41WEB_FDT.Versions SET subVersion=1 WHERE ( module = 'DOC41WEB' ) AND subVersion=0;
COMMIT WORK;

-- VERSION-UPDATE:
------------------
--UPDATE DOC41WEB_FDT.Versions SET subVersion=## WHERE ( module = 'DOC41WEB' ) AND subVersion=##;
--COMMIT WORK;

