--------------------------------------
-- Alter-Script: CVS v1.0           --
--------------------------------------

INSERT INTO DOC41WEB_FDT.VERSIONS (module, version, subVersion) VALUES ('DOC41WEB', 1, 0);
COMMIT WORK;

--------------------------------------
-- Alter-Script: CVS v1.0 -> v1.1   --
--------------------------------------
-- New Table SAP_CUSTOMER
-- New Reference D41_USER_CUSTOMER to SAP_CUSTUMER
-- New Table SAP_VENDOR
-- New Reference D41_USER_VENDOR to SAP_VENDOR

DROP TABLE D41_USER_PARTNER;

CREATE TABLE SAP_CUSTOMER
(
  OBJECT_ID           NUMBER(27)                                 NOT NULL,
  CREATED             DATE,
  CHANGED             DATE,
  CREATEDBY           VARCHAR2(10 CHAR),
  CHANGEDBY           VARCHAR2(10 CHAR),
  CREATEDON           VARCHAR2(100 CHAR),
  CHANGEDON           VARCHAR2(100 CHAR),
  PARTNER_NUMBER      VARCHAR2(10 CHAR)                          NOT NULL,
  NAME1               VARCHAR2(40 CHAR)                          NOT NULL,
  NAME2               VARCHAR2(40 CHAR),
  STREET              VARCHAR2(40 CHAR),
  POSTAL_CODE         VARCHAR2(10 CHAR),
  CITY                VARCHAR2(40 CHAR),
  COUNTRY_ISO_CODE    VARCHAR2(2 CHAR),
  IS_DELETED          NUMBER(1)                 DEFAULT 0        NOT NULL CONSTRAINT CK_SAPC_D CHECK (IS_DELETED IN (0, 1)),
  SAP_CHANGED         DATE
)
TABLESPACE DOC41WEB_DAT
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;

CREATE UNIQUE INDEX PK_SAP_CUSTOMER ON SAP_CUSTOMER
(OBJECT_ID)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX UK_SAP_CUSTOMER ON SAP_CUSTOMER
(PARTNER_NUMBER)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE OR REPLACE TRIGGER SAP_CUSTOMER_CDT
BEFORE INSERT OR UPDATE ON
  DOC41WEB_MGR.SAP_CUSTOMER
FOR EACH ROW
DECLARE
--  declare variables...
BEGIN
--  protect the create columns
  IF (INSERTING) THEN
    :new.created := DOC41WEB_FDT.get_Normalized_Time();
    IF (:new.changedBy IS NULL) THEN
      :new.changedBy := :new.createdBy;
    END IF;
  END IF;
  IF (UPDATING) THEN
    :new.created   := :old.created;
    :new.createdBy := :old.createdBy;
    :new.createdOn := :old.createdOn;
  END IF;
  :new.changed := DOC41WEB_FDT.get_Normalized_Time();
  IF (INSERTING AND :new.object_Id IS NULL) THEN
    :new.object_Id := DOC41WEB_FDT.get_Next_Oid();
  ELSIF (UPDATING) THEN
    :new.object_Id := :old.object_Id;
  END IF;
END;
/
SHOW ERRORS;

ALTER TABLE SAP_CUSTOMER ADD (
  CONSTRAINT PK_SAP_CUSTOMER
 PRIMARY KEY
 (OBJECT_ID));

ALTER TABLE SAP_CUSTOMER ADD (
  CONSTRAINT UK_SAP_CUSTOMER
 UNIQUE
 (PARTNER_NUMBER));

GRANT DELETE, INSERT, SELECT, UPDATE             ON SAP_CUSTOMER TO MXDOC41WEB WITH GRANT OPTION;

CREATE TABLE D41_USER_CUSTOMER
(
  OBJECT_ID           NUMBER(27)                                 NOT NULL,
  CREATED             DATE,
  CHANGED             DATE,
  CREATEDBY           VARCHAR2(10 CHAR),
  CHANGEDBY           VARCHAR2(10 CHAR),
  CREATEDON           VARCHAR2(100 CHAR),
  CHANGEDON           VARCHAR2(100 CHAR),
  USER_ID             NUMBER(27)                                 NOT NULL,
  CUSTOMER_ID         NUMBER(27)                                 NOT NULL
)
TABLESPACE DOC41WEB_DAT
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;

CREATE UNIQUE INDEX PK_D41_USER_CUSTOMER ON D41_USER_CUSTOMER
(OBJECT_ID)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX UK_D41_USER_CUSTOMER ON D41_USER_CUSTOMER
(USER_ID, CUSTOMER_ID)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE OR REPLACE TRIGGER D41_USER_CUSTOMER_CDT
BEFORE INSERT OR UPDATE ON
  DOC41WEB_MGR.D41_USER_CUSTOMER
FOR EACH ROW
DECLARE
--  declare variables...
BEGIN
--  protect the create columns
  IF (INSERTING) THEN
    :new.created := DOC41WEB_FDT.get_Normalized_Time();
    IF (:new.changedBy IS NULL) THEN
      :new.changedBy := :new.createdBy;
    END IF;
  END IF;
  IF (UPDATING) THEN
    :new.created   := :old.created;
    :new.createdBy := :old.createdBy;
    :new.createdOn := :old.createdOn;
  END IF;
  :new.changed := DOC41WEB_FDT.get_Normalized_Time();
  IF (INSERTING AND :new.object_Id IS NULL) THEN
    :new.object_Id := DOC41WEB_FDT.get_Next_Oid();
  ELSIF (UPDATING) THEN
    :new.object_Id := :old.object_Id;
  END IF;
END;
/
SHOW ERRORS;

ALTER TABLE D41_USER_CUSTOMER ADD (
  CONSTRAINT PK_D41_USER_CUSTOMER
 PRIMARY KEY
 (OBJECT_ID));

ALTER TABLE D41_USER_CUSTOMER ADD (
  CONSTRAINT UK_D41_USER_CUSTOMER
 UNIQUE
 (USER_ID, CUSTOMER_ID));

ALTER TABLE D41_USER_CUSTOMER ADD (
  CONSTRAINT FK_D41_USER_CUSTOMER_USER
 FOREIGN KEY (USER_ID)
 REFERENCES DOC41WEB_FDT.UM_USERS (OBJECT_ID),
  CONSTRAINT FK_D41_USER_CUSTOMER_CUST
 FOREIGN KEY (CUSTOMER_ID)
 REFERENCES DOC41WEB_MGR.SAP_CUSTOMER (OBJECT_ID)
);

GRANT DELETE, INSERT, SELECT, UPDATE             ON D41_USER_CUSTOMER TO MXDOC41WEB WITH GRANT OPTION;

CREATE TABLE SAP_VENDOR
(
  OBJECT_ID           NUMBER(27)                                 NOT NULL,
  CREATED             DATE,
  CHANGED             DATE,
  CREATEDBY           VARCHAR2(10 CHAR),
  CHANGEDBY           VARCHAR2(10 CHAR),
  CREATEDON           VARCHAR2(100 CHAR),
  CHANGEDON           VARCHAR2(100 CHAR),
  PARTNER_NUMBER      VARCHAR2(10 CHAR)                          NOT NULL,
  NAME1               VARCHAR2(40 CHAR)                          NOT NULL,
  NAME2               VARCHAR2(40 CHAR),
  STREET              VARCHAR2(40 CHAR),
  POSTAL_CODE         VARCHAR2(10 CHAR),
  CITY                VARCHAR2(40 CHAR),
  COUNTRY_ISO_CODE    VARCHAR2(2 CHAR),
  IS_DELETED          NUMBER(1)                 DEFAULT 0        NOT NULL CONSTRAINT CK_SAPV_D CHECK (IS_DELETED IN (0, 1)),
  SAP_CHANGED         DATE
)
TABLESPACE DOC41WEB_DAT
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;

CREATE UNIQUE INDEX PK_SAP_VENDOR ON SAP_VENDOR
(OBJECT_ID)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX UK_SAP_VENDOR ON SAP_VENDOR
(PARTNER_NUMBER)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE OR REPLACE TRIGGER SAP_VENDOR_CDT
BEFORE INSERT OR UPDATE ON
  DOC41WEB_MGR.SAP_VENDOR
FOR EACH ROW
DECLARE
--  declare variables...
BEGIN
--  protect the create columns
  IF (INSERTING) THEN
    :new.created := DOC41WEB_FDT.get_Normalized_Time();
    IF (:new.changedBy IS NULL) THEN
      :new.changedBy := :new.createdBy;
    END IF;
  END IF;
  IF (UPDATING) THEN
    :new.created   := :old.created;
    :new.createdBy := :old.createdBy;
    :new.createdOn := :old.createdOn;
  END IF;
  :new.changed := DOC41WEB_FDT.get_Normalized_Time();
  IF (INSERTING AND :new.object_Id IS NULL) THEN
    :new.object_Id := DOC41WEB_FDT.get_Next_Oid();
  ELSIF (UPDATING) THEN
    :new.object_Id := :old.object_Id;
  END IF;
END;
/
SHOW ERRORS;

ALTER TABLE SAP_VENDOR ADD (
  CONSTRAINT PK_SAP_VENDOR
 PRIMARY KEY
 (OBJECT_ID));

ALTER TABLE SAP_VENDOR ADD (
  CONSTRAINT UK_SAP_VENDOR
 UNIQUE
 (PARTNER_NUMBER));

GRANT DELETE, INSERT, SELECT, UPDATE             ON SAP_VENDOR TO MXDOC41WEB WITH GRANT OPTION;

CREATE TABLE D41_USER_VENDOR
(
  OBJECT_ID           NUMBER(27)                                 NOT NULL,
  CREATED             DATE,
  CHANGED             DATE,
  CREATEDBY           VARCHAR2(10 CHAR),
  CHANGEDBY           VARCHAR2(10 CHAR),
  CREATEDON           VARCHAR2(100 CHAR),
  CHANGEDON           VARCHAR2(100 CHAR),
  USER_ID             NUMBER(27)                                 NOT NULL,
  VENDOR_ID           NUMBER(27)                                 NOT NULL
)
TABLESPACE DOC41WEB_DAT
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;

CREATE UNIQUE INDEX PK_D41_USER_VENDOR ON D41_USER_VENDOR
(OBJECT_ID)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX UK_D41_USER_VENDOR ON D41_USER_VENDOR
(USER_ID, VENDOR_ID)
TABLESPACE DOC41WEB_IDX
LOGGING
NOPARALLEL;

CREATE OR REPLACE TRIGGER D41_USER_VENDOR_CDT
BEFORE INSERT OR UPDATE ON
  DOC41WEB_MGR.D41_USER_VENDOR
FOR EACH ROW
DECLARE
--  declare variables...
BEGIN
--  protect the create columns
  IF (INSERTING) THEN
    :new.created := DOC41WEB_FDT.get_Normalized_Time();
    IF (:new.changedBy IS NULL) THEN
      :new.changedBy := :new.createdBy;
    END IF;
  END IF;
  IF (UPDATING) THEN
    :new.created   := :old.created;
    :new.createdBy := :old.createdBy;
    :new.createdOn := :old.createdOn;
  END IF;
  :new.changed := DOC41WEB_FDT.get_Normalized_Time();
  IF (INSERTING AND :new.object_Id IS NULL) THEN
    :new.object_Id := DOC41WEB_FDT.get_Next_Oid();
  ELSIF (UPDATING) THEN
    :new.object_Id := :old.object_Id;
  END IF;
END;
/
SHOW ERRORS;

ALTER TABLE D41_USER_VENDOR ADD (
  CONSTRAINT PK_D41_USER_VENDOR
 PRIMARY KEY
 (OBJECT_ID));

ALTER TABLE D41_USER_VENDOR ADD (
  CONSTRAINT UK_D41_USER_VENDOR
 UNIQUE
 (USER_ID, VENDOR_ID));

ALTER TABLE D41_USER_VENDOR ADD (
  CONSTRAINT FK_D41_USER_VENDOR_USER
 FOREIGN KEY (USER_ID)
 REFERENCES DOC41WEB_FDT.UM_USERS (OBJECT_ID),
  CONSTRAINT FK_D41_USER_VENDOR_VENDOR
 FOREIGN KEY (VENDOR_ID)
 REFERENCES DOC41WEB_MGR.SAP_VENDOR (OBJECT_ID)
);

GRANT DELETE, INSERT, SELECT, UPDATE             ON D41_USER_VENDOR TO MXDOC41WEB WITH GRANT OPTION;

UPDATE DOC41WEB_FDT.Versions SET subVersion=1 WHERE ( module = 'DOC41WEB' ) AND subVersion=0;
COMMIT WORK;

-- VERSION-UPDATE:
------------------
--UPDATE DOC41WEB_FDT.Versions SET subVersion=## WHERE ( module = 'DOC41WEB' ) AND subVersion=##;
--COMMIT WORK;

