<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<%@ page language="java" pageEncoding="utf-8" contentType="text/html;charset=utf-8" %>

<%@page import="com.bayer.ecim.foundation.basic.ConfigMap"%>
<%@page import="java.text.SimpleDateFormat"%>
<%@page import="java.util.Date"%>

<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<%@taglib prefix="spring" uri="http://www.springframework.org/tags" %>
<%@taglib prefix="doc41" uri="doc41-tags" %>

<link href="<%= response.encodeURL(request.getContextPath() + "/resources/img/favicon.ico") %>" rel="shortcut icon" />

<link href="<%= response.encodeURL(request.getContextPath() + "/resources/css/jqueryui-redmond/jquery-ui-1.8.19.custom.css") %>" rel="stylesheet" type="text/css"/>
<link href="<%= response.encodeURL(request.getContextPath() + "/resources/css/BayStyles.css") %>" rel="stylesheet" type="text/css"/>
<link href="<%= response.encodeURL(request.getContextPath() + "/resources/css/main.css") %>" rel="stylesheet" type="text/css"/>
<link href="<%= response.encodeURL(request.getContextPath() + "/resources/css/domTT.css") %>" rel="stylesheet" type="text/css"/>
<link href="<%= response.encodeURL(request.getContextPath() + "/resources/css/portlet.css") %>" rel="stylesheet" type="text/css"/>
<link href="<%= response.encodeURL(request.getContextPath() + "/resources/css/doc41.css") %>" rel="stylesheet" type="text/css"/>

<style type="text/css">
		.pagingBlock { height: 18px; background-color: #F2F9FC; padding-top: 4px; padding-bottom: 4px; padding-left: 10px; border-top: 1px solid #009899; }
</style>

<script type="text/javascript" src="<%= response.encodeURL(request.getContextPath() + "/resources/js/jquery-1.7.2.min.js") %>"></script>
<script type="text/javascript" src="<%= response.encodeURL(request.getContextPath() + "/resources/js/domLib.js") %>"></script>
<script type="text/javascript" src="<%= response.encodeURL(request.getContextPath() + "/resources/js/jquery-ui-1.8.20.custom.min.js") %>"></script>
  

<!-- Tablesorter: required -->
<link rel="stylesheet" href="<%= response.encodeURL(request.getContextPath() + "/resources/css/theme.tablesorter.green.css") %>">
<link rel="stylesheet" href="<%= response.encodeURL(request.getContextPath() + "/resources/css/doc41tablesorter.css") %>">
<script src="<%= response.encodeURL(request.getContextPath() + "/resources/js/jquery.tablesorter.min.js") %>"></script>

<!-- Tablesorter pager: required -->
<link rel="stylesheet" href="<%= response.encodeURL(request.getContextPath() + "/resources/css/jquery.tablesorter.pager.css") %>">
<script src="<%= response.encodeURL(request.getContextPath() + "/resources/js/jquery.tablesorter.pager.min.js") %>"></script>

<!-- Tablesorter: optional -->
<script src="<%= response.encodeURL(request.getContextPath() + "/resources/js/jquery.tablesorter.widgets.min.js") %>"></script>

<style type="text/css">
</style>

<script >
	//the last opened dialog - maybe already closed:
	var openDialogName = null;
	var browserTabId ='0';
	var serverBrowserTabId ='${tabId}';
	
	//init the window tab correctly
	$(function() {
		//avoid overriding the client local tabId with a server one - when could this happen? wrong url param?
		//better show an alert, just in case...
		if (browserTabId == '0'){
			if (serverBrowserTabId != '0'){
				browserTabId=serverBrowserTabId;
			}else{
			jetzt= new Date();
			browserTabId =jetzt.getTime();
			}
//			alert('Server:'+serverBrowserTabId+'- Client:'+browserTabId);
		}
		else {
			if (browserTabId != serverBrowserTabId){
				alert('Server:'+serverBrowserTabId+' TABId different from Client:'+browserTabId);
			}
		}
	});
	
	function closeTab() {
		//alert('closing Tab ...');
		window.open('','_parent','');
		window.close();
		
		return false;
	}

	function checkLength(field, limit) {
	
	   //alert(field.value.length);
	   if (field.value.length >= limit) {
	   //alert('zu lang');
	   field.value = field.value.substring(0,limit);
	   }
	}
	
	function setfocus(field) {
        f = document.all(field);
        f.focus();
        f.select();
    }
    
    function suffixTruncate(text, suffixToTruncate) {
        return text.substring(0, text.length-suffixToTruncate.length);
    }

	function isEnterEvent(e) {
		var code;
		if(!e) var e = window.event;
		
		if (e.keyCode) {
			code = e.keyCode;
		} else if(e.which) {
			code = e.which;
		}
		return (code == 13);
	}
	
	function submitOnEnter(e, buttonName) {
		if (isEnterEvent(e)) {
			// click the button:
			var button = document.getElementById(buttonName);
			button.click();
	    	return false;
	    }
	    return true;
	}
	
	function addTabId2Form(form) {
		var hiddenField = document.createElement("input");
        hiddenField.setAttribute("type", "hidden");
        hiddenField.setAttribute("name", "tabId");
        hiddenField.setAttribute("value", browserTabId);
        form.appendChild(hiddenField);
	}
	
    function callAction(action, formname, event, button, postLoadFunction, selector) {
    	if (button != null) button.disabled = true;
    	if (selector == null) selector=' #div-body';
    	
    	var form = document.getElementById(formname);
		if (form.command) {
			form.command.value = event;
		}
		addTabId2Form(form);
		
		
		//alert(form.action);
		var dialogName = "#dialog-"+action.substring(0, action.indexOf('.htm'));
		
		if ($(dialogName).is(':visible')) {
			if (event.indexOf('abort') == 0) { 
				$(dialogName).dialog('close');
			} else {
				if (postLoadFunction == null) {
					$(dialogName).load(action+selector, wrapFormValues(form));
				} else {
					$(dialogName).load(action+selector, wrapFormValues(form), function() { postLoadFunction(); });
				}
			}
			
		} else {
			form.submit();
		}
    }
    
	function submitAction(formname, event, button) {
		if (button != null) button.disabled = true;
		var form = document.getElementById(formname);
		form.command.value = event;
		addTabId2Form(form);
		
		form.submit();
	}
	
	function submitActionAfterCheck(infoText,formname, event, button) 
	{
		var confirmed = confirm(infoText);
		if (confirmed == true) {
			submitAction(formname, event, button);
		}
	}
	
	function submitPagingAction(formname, event) {
		var form = document.getElementById(formname);
		form.command.value = 'paging'+event;
		addTabId2Form(form);
		
		selector=' #div-body';
		
		if (openDialogName != null) {
			if ($(openDialogName).is(':visible')) {
				var action = openDialogName.substring(8)+".htm";  // "#dialog-" weg
				//alert(action);
				$(openDialogName).load(action+selector, wrapFormValues(form));
			}
		} else {
			//alert(form.command.value);
			form.submit();
		}
	}
	
	function wrapFormValues(form) { 
	    form = $(form).serializeArray();
	    var dataArray = new Object();

	    for( index in form) {
	        if (form[index].value)   {
	                dataArray[form[index].name] = form[index].value;        
	        } else {
	        		dataArray[form[index].name] = '';
	        }
	    }           

	    return dataArray; 
	}

	function doNothing() 
	{
	}
		
	function sendGetAfterPopup(infoText, target, params) {
		alert(infoText);
		sendGet(target, params);
	}
	
	function sendGetAfterCheck(infoText, target, params) {
		var confirmed = confirm(infoText);
		if (confirmed == true) {
			sendGet(target, params);
		}
	}
	
	function sendGetAfterCheckAndDisable(infoText, target, params, button) {
		var confirmed = confirm(infoText);
		if (confirmed == true) {
			button.disabled = true;
			sendGet(target, params);
		}
	}
	
	function sendPostAfterCheck(infoText, target, params) 
	{
		var confirmed = confirm(infoText);
		if (confirmed == true) {
			sendPost(target, params);
		}
	}
	
	function sendPostAfterCheckAndDisable(infoText, target, params, button)
	{
		var confirmed = confirm(infoText);
		if (confirmed == true) {
			button.disabled = true;
			sendPost(target, params);
		}
	}
		
	function hide(id) {
		var elem = document.getElementById(id);
		if (elem != null) {
			elem.style.display = 'none';
		}
	}
	
	function show(id) {
		var elem = document.getElementById(id);
		if (elem != null) {
			elem.style.display = 'block';
		}
	}
	
	function showRow(id) {
		var elem = document.getElementById(id);
		if (elem != null) {
			elem.style.display = 'table-row';
		}
	}
	
	function toggleVisibility(id) {
		var elem = document.getElementById(id);
		if (elem != null) {
			if (elem.style.display == 'none') {
				elem.style.display = 'block';
			} else {
				elem.style.display = 'none';
			}
		}
	}
	
	function toggleRowVisibility(id) {
		if ($("#"+id).is(':visible')) {
			$("#"+id).hide();
		} else {
			$("#"+id).show();
		}
	}
	
	
	function parseParams(params, paramArray) {
		var endKey = params.indexOf('=');
		
		if (endKey != -1) {
			var key = params.substring(0, endKey);
			var endValue = params.indexOf('&');
			var value;
			
			if (endValue != -1) {
				
				value= params.substring(endKey+1, endValue);
				parseParams(params.substring(endValue+1), paramArray);
			} else {
				value= params.substring(endKey+1);
			}
			if (paramArray[key]) {
				paramArray[key]=[value].concat(paramArray[key]);
			}
			else {
				paramArray[key]=value;
			}
//			alert(paramArray[key] instanceof Array);
		}
    }
	
	function sendPost2Target(path, params) {
        var form = document.createElement("form");

        //move the submit function to another variable
        //so that it doesn't get overwritten
        form._submit_function_ = form.submit;

        
      	//var CONTEXT_PATH = readCookie("IV_JCT")+"<%=response.encodeURL(request.getContextPath()+ "/")%>";
		//var CONTEXT_PATH = "<%=response.encodeURL(request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+request.getContextPath() + "/")%>";
		
        //form.setAttribute("action", CONTEXT_PATH + path);
        form.setAttribute("action", path);
        form.setAttribute("method", "POST");

        for(var key in params) {
        	if (params[key] instanceof Array){
        		for (var value in params[key]) {
            		var hiddenField = document.createElement("input");
            		hiddenField.setAttribute("type", "hidden");
            		hiddenField.setAttribute("name", key);
            		hiddenField.setAttribute("value", params[key][value]);			
            		form.appendChild(hiddenField);       			
        		}
        	}
        	else {
            		var hiddenField = document.createElement("input");
            		hiddenField.setAttribute("type", "hidden");
            		hiddenField.setAttribute("name", key);
            		hiddenField.setAttribute("value", params[key]);			
			//alert(key);
			//alert(params[key]);
            		form.appendChild(hiddenField);
        		}
        }

        document.body.appendChild(form);
        form._submit_function_(); //call the renamed function
        document.body.removeChild(form);
    }
    
	function sendGetFormTarget(path, params) {
        var form = document.createElement("form");

        //move the submit function to another variable
        //so that it doesn't get overwritten
        form._submit_function_ = form.submit;

        
      	//var CONTEXT_PATH = readCookie("IV_JCT")+"<%=response.encodeURL(request.getContextPath()+ "/")%>";
		//var CONTEXT_PATH = "<%=response.encodeURL(request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+request.getContextPath() + "/")%>";
		
        //form.setAttribute("action", CONTEXT_PATH + path);
        form.setAttribute("action", path);
        form.setAttribute("method", "GET");

        for(var key in params) {
        	if (params[key] instanceof Array){
        		for (var value in params[key]) {
            		var hiddenField = document.createElement("input");
            		hiddenField.setAttribute("type", "hidden");
            		hiddenField.setAttribute("name", key);
            		hiddenField.setAttribute("value", params[key][value]);			
            		form.appendChild(hiddenField);       			
        		}
        	}
        	else {
            		var hiddenField = document.createElement("input");
            		hiddenField.setAttribute("type", "hidden");
            		hiddenField.setAttribute("name", key);
            		hiddenField.setAttribute("value", params[key]);			
			//alert(key);
			//alert(params[key]);
            		form.appendChild(hiddenField);
        		}
        }

        document.body.appendChild(form);
        form._submit_function_(); //call the renamed function
        document.body.removeChild(form);
    }
    
	function sendGet2Target(target, params) {
		var CONTEXT_PATH = readCookie("IV_JCT")+"<%=response.encodeURL(request.getContextPath()+"/")%>";
		window.location.href= CONTEXT_PATH + target + "?" + params;
	}
	
	function sendGet(target, params) {
		//alert(target+','+params);
		sendGet2Target(target, params);
		//sendPost(target, "render=true&"+params);
	}
	
	function sendGet2(target, params) {
		var paramArray = new Array();
		parseParams('tabId='+browserTabId+'&'+params, paramArray);
		sendGetFormTarget(target, paramArray);
	}
	
	function sendPost(target, params) {
		//var targetRef = getXMLHttpRequest();
		//var CONTEXT_PATH = ...siehe oben
		//targetRef.open("POST", CONTEXT_PATH + target, false);
		//targetRef.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); 
		//targetRef.send(params);
		
		//window.document.write(targetRef.responseText);
		//window.document.close();
		
		//alert(browserTabId);
		var paramArray = new Array();
		parseParams('tabId='+browserTabId+'&'+params, paramArray);
		sendPost2Target(target, paramArray);
	}		

	function readCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');

        for(var i=0;i < ca.length;i++) {
	        var c = ca[i];
	        while (c.charAt(0)==' ') c = c.substring(1,c.length);
	        if (c.indexOf(nameEQ) == 0) return decodeURIComponent(c.substring(nameEQ.length,c.length));
        }

        return "";
	}
	
	// functions used for history:
	function showHistoryDetail(systemPrefix, orderNumber) {
		$("#historyDetail").show();
		showWaiting("#historyDetail");
		
		if ($("#dialog-history").is(':visible')) {
			$('#dialog-history').animate({scrollTop: 0}, 100);
		} else if ($("#dialog-u8phistory").is(':visible')) {
			$('#dialog-u8phistory').animate({scrollTop: 0}, 100);
		} else {
			jQuery('html,body').animate({scrollTop: 70}, 100);
		}
		
		$("#historyDetail").load(systemPrefix+"historydetail.htm #div-body", {orderId: orderNumber});
	}
	
	function hideHistoryDetail() {
		$("#historyDetail").hide();
	}
	
	function startReturnOrder(historyIndex, systemPrefix, shiptoNumber, soldtoNumber, invoiceNumber, agentPartnerNumber, sapOrderNumber, infoText, button) {
		var ot = $("#returnOrderType"+historyIndex).val();
		var or = $("#returnOrderReason"+historyIndex).val();
		var dialog = document.getElementById("dialog-blocked");
		
		var confirmed = true;  //confirm(infoText+"  [Type: "+ot+" / Reason: "+or+"]");
		if (confirmed == true) {
			if (dialog != null) {
				$('#dialog-blocked').dialog('open');
			}
			<%-- Enhancement 7 EVAYD 28.03.13 --%>
			sendPost(systemPrefix+'returnorder.htm', 'reset=true&invoice='+invoiceNumber+'&returnshipto='+shiptoNumber+'&returnsoldto='+soldtoNumber+'&otype='+ot+'&oreason='+or+'&agentno='+agentPartnerNumber+'&sapOrderNumber='+sapOrderNumber, button);
		}
	}
	
	function changeOrderReason(historyIndex) {
		$("#returnbutton"+historyIndex).attr("disabled", "disabled");
		
		var dialog = document.getElementById("dialog-blocked");
		if (dialog != null) $('#dialog-blocked').dialog('open');
		
		var ot = $("#returnOrderType"+historyIndex).val();
		$("#div-orderreason"+historyIndex).load("changereason.htm #div-body", {tabId: browserTabId, index:historyIndex, ordertypekey: ot}, 
												 function() { if (dialog != null) {
																$('#dialog-blocked').dialog('close');
															  }
												 			}
		);
	}
	
	function checkOrderReason(historyIndex) {
		var or = $("#returnOrderReason"+historyIndex).val();
		if (or.length > 1) {
			$("#returnbutton"+historyIndex).removeAttr("disabled");
		} else {
			$("#returnbutton"+historyIndex).attr("disabled", "disabled");
		}
	}
	
	// user management:
	function changeUserAgentLocations() {
		var invAgentId = $("#invAgentId").val();

		$("#div-agentlocations").load("useragentlocations.htm #div-body", {tabId: browserTabId, invAgentId: invAgentId});
	}
	
	function showWaiting(dialogName) {
		$(dialogName).html($("#tab-loading").html());
	}
	
	function printDetail(dialogName, historyPart) {
		$('#historyOverview').hide();
		printDialog(dialogName, "#historyDetail");
		setTimeout(function() { $('#historyOverview').show(); }, 5000);
	}
	
	
	function updatePrintWindow(printWindow, historyPart) {
		printWindow.$("#div-body").html($(historyPart).html());
        printWindow.document.close();
        
        printWindow.focus(); 
        printWindow.print(); 
        printWindow.close(); 
	}
	
	function printDialog(dialogName, historyPart) {
		//alert(dialogName);
		if ($(dialogName).is(':visible')) {
			
			//$("#overlay_menu").hide();
			//window.print();
			//setTimeout(function() { $("#overlay_menu").show(); }, 5000);
			
	        var windowUrl = 'print.htm'; 
	        var windowName = 'Print' + new Date().getTime();
	        var printWindow = window.open(windowUrl, windowName, 'left=50000,top=50000,width=0,height=0'); 
	          
	        if ($.browser.msie) {
	        	setTimeout(function() { updatePrintWindow(printWindow, historyPart); }, 6000);
	        } else {
       	    	printWindow.onload = function() {
       	    		updatePrintWindow(printWindow, historyPart);
       	    	};
  	        }
  	        
		} else {
			window.print();
		}
	}
</script>

<div id="tab-loading" style="display: none;">
	<div style="font-weight: bold; text-align: center; padding-top: 150px">
		<img src="<%= response.encodeURL(request.getContextPath() + "/resources/img/common/bayer_logo_animated.gif") %>" height="40px" title="loading..." style="border: 0px;">
		<p>Loading ...</p>
	</div>
</div>
